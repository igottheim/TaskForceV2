
function ChatRoom({user, rooms }) {
  
  const [messages, setMessages] = useState([])
  const [messageInput, setMessageInput] = useState('')
  const [channel, setChannel] = useState(null)
  const [currentRoom, setCurrentRoom] = useState(null)
  const [liveUsers, setLiveUsers] = useState([])
  const [errors, setErrors] = useState([]);



  useEffect(() => {
    if (user) {
      const newChannel = consumer.subscriptions.create({ channel: "ChatChannel", room: `${rooms.category.name}`, category: `${rooms.category_id}`, user_id: user.id },
      {
        received: (data) => {
          // if state.currentUser === data.user_id !== 1 && data.event_type === 'enter'
          // do something based on this
          if (data.event_type === "message")
          {
            console.log(data)
            setMessages(oldMessages => [...oldMessages, data.content])
           
          }
          else if (data.event_type === "enter" && data.user_id !== user.id)
          {
           
            console.log("entering")
            console.log(data)
            setMessages(oldMessages => [...oldMessages, data])
            
          }
          else if (data.event_type === "exit" && data.user_id !== user.id)
          {
           console.log(data.user_id) 
            console.log("goodbye")
            setMessages(oldMessages => [...oldMessages, data])
         
          }
    
         
        }
      })

      setChannel(newChannel)
      return ()=> newChannel.unsubscribe()
     
    }
    
  }, [user])

  // console.log(liveUsers)



  function handleMessageInputChange(e) {
    setMessageInput(e.target.value)

  }

  function handleSubmit(e) {
    e.preventDefault()
   console.log(messageInput, user)
   console.log(rooms)

  // fetch(`/messages`, {
  //   method: "POST",
  //   headers: {
  //     "Content-Type": "application/json",
  //   },
  //   body: JSON.stringify({
  //     "content":messageInput,
  //     "user_id": user.id,
  //     "category_id":rooms.category_id
  //   }),
  // }).then((r) => {
  //   if (r.ok) {
  //     r.json().then((e) => setMessages(...messages, { "content":messageInput,
  //     "user_id": user.id,
  //     "category_id":rooms.category_id}))

  //     alert(`Review Added!`)
  //   }
  //   else {
  //     r.json().then((err) => setErrors(err.error));
  //     alert("Please add a review and resubmit!!!")
  //   }
  // });

    channel.send({content: messageInput, user_id: user.id})
    setMessageInput('')
    
  }

  useEffect(() => {
    if (user) {
      fetch('/messages')
      .then(res => res.json())
      .then(messages => setMessages(messages))
    }
  }, [user])

  

  let messages1 = messages.filter((message)=> message.category_id === rooms.category_id)
  

  return (
    <div>

      <h3>{user.first_name}</h3>
    <div className ="center-col">
      {messages1.map((message, i) => <p key={i}> {message.user_id}: {message.content} - {message.created_at} - {message.category_id}</p>)}
      

      </div>
      <form onSubmit={handleSubmit}>

        <input type="text" value={messageInput} onChange={handleMessageInputChange} />

      </form>

    </div>
  )
}

export default ChatRoom